networks:
  aiprojectorchestrator-network:
    driver: bridge

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: aiprojectorchestrator
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aiprojectorchestrator-network
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8087:8080" # RESTORED: App accessible on 8087
    volumes:
      - ./Instructions:/app/Instructions
    depends_on:
      - db
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=aiprojectorchestrator;Username=user;Password=password
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
      # OpenRouter configuration
      - AIProviders__Providers__OpenRouter__ApiKey=${OPENROUTER_API_KEY}
    networks:
      - aiprojectorchestrator-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
