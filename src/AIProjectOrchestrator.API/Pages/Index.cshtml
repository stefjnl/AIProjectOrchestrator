@page
@{
    ViewData["Title"] = "Dashboard";
}

<div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Welcome Section -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-slate-900 mb-3 bg-gradient-to-r from-indigo-600 to-blue-600 bg-clip-text text-transparent">
                Welcome to AI Project Orchestrator
            </h1>
            <p class="text-lg text-slate-600 max-w-2xl mx-auto">
                Transform your ideas into reality with AI-powered project development
            </p>
        </div>

        <!-- Stats Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <div class="bg-white/90 backdrop-blur rounded-xl shadow-md border border-indigo-200 p-6 hover:shadow-lg transition-all">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-slate-600 mb-1">Active Projects</p>
                        <p class="text-3xl font-bold text-slate-900" id="active-projects">0</p>
                    </div>
                    <div class="text-4xl">üöÄ</div>
                </div>
            </div>
            <div class="bg-white/90 backdrop-blur rounded-xl shadow-md border border-blue-200 p-6 hover:shadow-lg transition-all">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-slate-600 mb-1">Pending Reviews</p>
                        <p class="text-3xl font-bold text-slate-900" id="pending-reviews">0</p>
                    </div>
                    <div class="text-4xl">üìã</div>
                </div>
            </div>
            <div class="bg-white/90 backdrop-blur rounded-xl shadow-md border border-green-200 p-6 hover:shadow-lg transition-all">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-slate-600 mb-1">Stories Completed</p>
                        <p class="text-3xl font-bold text-slate-900" id="completed-stories">0</p>
                    </div>
                    <div class="text-4xl">‚úÖ</div>
                </div>
            </div>
            <div class="bg-white/90 backdrop-blur rounded-xl shadow-md border border-orange-200 p-6 hover:shadow-lg transition-all">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-slate-600 mb-1">AI Tasks Today</p>
                        <p class="text-3xl font-bold text-slate-900" id="ai-tasks">0</p>
                    </div>
                    <div class="text-4xl">‚ö°</div>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="bg-white/90 backdrop-blur rounded-xl shadow-md border border-indigo-200 p-6 mb-8">
            <h2 class="text-xl font-semibold text-slate-900 mb-4">Quick Actions</h2>
            <div class="flex flex-wrap gap-3">
                <a href="/Projects/Create" class="inline-flex items-center px-6 py-3 bg-indigo-600 hover:bg-indigo-700 text-white font-medium rounded-lg shadow-md transition-all">
                    <span class="text-xl mr-2">‚ûï</span> Create New Project
                </a>
                <a href="/Projects" class="inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg shadow-md transition-all">
                    <span class="text-xl mr-2">üìÅ</span> View All Projects
                </a>
                <a href="/Reviews/Queue" class="inline-flex items-center px-6 py-3 bg-orange-600 hover:bg-orange-700 text-white font-medium rounded-lg shadow-md transition-all">
                    <span class="text-xl mr-2">üëÄ</span> Review Queue
                </a>
            </div>
        </div>

        <!-- Recent Projects -->
        <div class="bg-white/90 backdrop-blur rounded-xl shadow-md border border-indigo-200 p-6 mb-8">
            <h2 class="text-xl font-semibold text-slate-900 mb-4">Recent Projects</h2>
            <div id="recent-projects" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <!-- Projects will be loaded here -->
            </div>
        </div>

        <!-- System Status -->
        <div class="bg-white/90 backdrop-blur rounded-xl shadow-md border border-indigo-200 p-6">
            <h2 class="text-xl font-semibold text-slate-900 mb-4">System Status</h2>
            <div id="system-status" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
                <!-- System status will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            loadDashboardData();
            loadSystemStatus();

            // Refresh data every 30 seconds
            setInterval(() => {
                loadDashboardData();
                loadSystemStatus();
            }, 30000);
        });

        async function loadDashboardData() {
            try {
                console.log('Loading dashboard data...');

                // Check if APIClient is available
                if (typeof APIClient === 'undefined') {
                    console.error('APIClient is not available');
                    handleApiError(new Error('APIClient is not available. Please check if api.js is loaded.'), 'Failed to load dashboard data');
                    return;
                }

                console.log('Calling APIClient.getProjects() and APIClient.getPendingReviews()');

                const [projects, reviews] = await Promise.all([
                    APIClient.getProjects(),
                    APIClient.getPendingReviews()
                ]);

                console.log('Dashboard data loaded:', { projects: projects.length, reviews: reviews.length });

                // Update stats
                document.getElementById('active-projects').textContent = projects.length;
                document.getElementById('pending-reviews').textContent = reviews.length;

                // Calculate completed stories (mock data for now)
                document.getElementById('completed-stories').textContent =
                    Math.floor(Math.random() * 50) + 10;

                // Calculate AI tasks (mock data for now)
                document.getElementById('ai-tasks').textContent =
                    Math.floor(Math.random() * 20) + 5;

                // Load recent projects
                loadRecentProjects(projects.slice(0, 4));
            } catch (error) {
                console.error('Error loading dashboard data:', error);
                handleApiError(error, 'Failed to load dashboard data');
            }
        }

        function loadRecentProjects(projects) {
            const container = document.getElementById('recent-projects');

            if (projects.length === 0) {
                container.innerHTML = '<p class="text-center text-slate-600">No projects yet. Create your first project!</p>';
                return;
            }

            container.innerHTML = projects.map(project => {
                const statusColors = {
                    'planning': 'bg-orange-100 text-orange-700 border-orange-300',
                    'active': 'bg-green-100 text-green-700 border-green-300',
                    'completed': 'bg-blue-100 text-blue-700 border-blue-300'
                };
                const statusClass = statusColors[project.status?.toLowerCase()] || 'bg-gray-100 text-gray-700 border-gray-300';
                
                return `
                    <div class="bg-white rounded-lg border border-indigo-200 p-5 hover:shadow-md transition-all">
                        <div class="flex items-start justify-between mb-3">
                            <h3 class="text-lg font-semibold text-slate-900">${project.name}</h3>
                            <span class="px-3 py-1 text-xs font-medium rounded-full border ${statusClass}">
                                ${project.status || 'Unknown'}
                            </span>
                        </div>
                        <p class="text-sm text-slate-600 mb-3">${project.description || 'No description'}</p>
                        <div class="flex items-center justify-between">
                            <span class="text-xs text-slate-500">
                                Created: ${new Date(project.createdAt).toLocaleDateString()}
                            </span>
                            <a href="/Projects/Workflow?projectId=${project.id}" 
                               class="inline-flex items-center px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium rounded-lg transition-all">
                                View Workflow ‚Üí
                            </a>
                        </div>
                    </div>
                `;
            }).join('');
        }

        async function loadSystemStatus() {
            try {
                console.log('Loading system status...');

                // Check if APIClient is available
                if (typeof APIClient === 'undefined') {
                    console.error('APIClient is not available');
                    throw new Error('APIClient is not available. Please check if api.js is loaded.');
                }

                const health = await APIClient.get('/health');
                console.log('Health check response:', health);

                const container = document.getElementById('system-status');

                // Validate that health is an object with service statuses
                if (!health || typeof health !== 'object') {
                    throw new Error('Invalid health check response format');
                }

                container.innerHTML = Object.entries(health).map(([service, status]) => `
                    <div class="flex items-center justify-between bg-slate-50 rounded-lg p-3 border border-slate-200">
                        <span class="font-medium text-slate-700">${service}</span>
                        <span class="text-2xl">
                            ${status ? '‚úÖ' : '‚ùå'}
                        </span>
                    </div>
                `).join('');
                console.log('System status loaded successfully');
            } catch (error) {
                console.error('Failed to load system status:', error);
                const container = document.getElementById('system-status');

                // Provide a more user-friendly error message
                let errorMessage = 'Unable to load system status';
                if (error.message && error.message.includes('Network error')) {
                    errorMessage = 'Network connection issue - API may be unavailable';
                } else if (error.message && error.message.includes('HTTP 503')) {
                    errorMessage = 'AI services are temporarily unavailable - core functionality still works';
                } else if (error.message && error.message.includes('HTTP')) {
                    errorMessage = 'Service temporarily unavailable';
                }

                // Show a graceful fallback with basic system info
                container.innerHTML = `
                    <div class="flex items-center justify-between bg-green-50 rounded-lg p-3 border border-green-200">
                        <span class="font-medium text-slate-700">Core System</span>
                        <span class="text-2xl">‚úÖ</span>
                    </div>
                    <div class="flex items-center justify-between bg-red-50 rounded-lg p-3 border border-red-200">
                        <span class="font-medium text-slate-700">AI Providers</span>
                        <span class="text-2xl">‚ùå</span>
                    </div>
                    <div class="col-span-full bg-orange-50 rounded-lg p-3 border border-orange-200">
                        <p class="text-sm text-orange-700 text-center">${errorMessage}</p>
                    </div>
                `;
            }
        }

        // Dashboard-specific styles are now handled by Tailwind CSS inline classes
    </script>
}
