@page
@{
    ViewData["Title"] = "Error";
}

<div class="container">
    <div class="error-page">
        <div class="error-content">
            <div class="error-icon">üòû</div>
            <h1 class="error-title">Oops! Something went wrong</h1>
            <p class="error-message">We encountered an unexpected error while processing your request.</p>

            <div class="error-details" id="error-details" style="display: none;">
                <div class="error-code">
                    <strong>Error Code:</strong> <span id="error-code">500</span>
                </div>
                <div class="error-description">
                    <strong>Description:</strong> <span id="error-description">Internal Server Error</span>
                </div>
            </div>

            <div class="error-actions">
                <a href="/" class="btn btn-primary">
                    <span>üè†</span> Go to Dashboard
                </a>
                <button class="btn btn-secondary" onclick="history.back()">
                    <span>‚Üê</span> Go Back
                </button>
                <button class="btn btn-outline" onclick="toggleErrorDetails()">
                    <span>‚ÑπÔ∏è</span> Show Details
                </button>
            </div>

            <div class="error-suggestions">
                <h3>What you can do:</h3>
                <ul>
                    <li>Refresh the page and try again</li>
                    <li>Check your internet connection</li>
                    <li>Contact support if the problem persists</li>
                    <li>Try again later if the service is temporarily unavailable</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get error information from URL parameters or server
            const urlParams = new URLSearchParams(window.location.search);
            const errorCode = urlParams.get('code') || '500';
            const errorMessage = urlParams.get('message') || 'An unexpected error occurred';

            document.getElementById('error-code').textContent = errorCode;
            document.getElementById('error-description').textContent = errorMessage;

            // Log error for debugging
            console.error('Error page loaded:', {
                code: errorCode,
                message: errorMessage,
                timestamp: new Date().toISOString()
            });
        });

        function toggleErrorDetails() {
            const details = document.getElementById('error-details');
            const button = event.target;

            if (details.style.display === 'none') {
                details.style.display = 'block';
                button.innerHTML = '<span>‚ÑπÔ∏è</span> Hide Details';
            } else {
                details.style.display = 'none';
                button.innerHTML = '<span>‚ÑπÔ∏è</span> Show Details';
            }
        }

        // Add CSS for error page
        const style = document.createElement('style');
        style.textContent = `
                .error-page {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    min-height: 60vh;
                    padding: 2rem 0;
                }
            
                .error-content {
                    text-align: center;
                    max-width: 600px;
                    padding: 3rem;
                    background: white;
                    border-radius: 16px;
                    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
                    border: 1px solid var(--color-gray-200);
                }
            
                .error-icon {
                    font-size: 4rem;
                    margin-bottom: 1.5rem;
                    animation: bounce 2s infinite;
                }
            
                @@keyframes bounce {
                    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
                    40% { transform: translateY(-10px); }
                    60% { transform: translateY(-5px); }
                }
            
                .error-title {
                    font-size: 2rem;
                    margin-bottom: 1rem;
                    color: var(--color-gray-900);
                }
            
                .error-message {
                    font-size: 1.125rem;
                    color: var(--color-gray-600);
                    margin-bottom: 2rem;
                    line-height: 1.6;
                }
            
                .error-details {
                    background: var(--color-gray-50);
                    border-radius: 8px;
                    padding: 1.5rem;
                    margin-bottom: 2rem;
                    text-align: left;
                    border: 1px solid var(--color-gray-200);
                }
            
                .error-code, .error-description {
                    margin-bottom: 0.5rem;
                    font-family: var(--font-mono);
                    font-size: 0.875rem;
                }
            
                .error-code:last-child, .error-description:last-child {
                    margin-bottom: 0;
                }
            
                .error-actions {
                    display: flex;
                    gap: 1rem;
                    justify-content: center;
                    margin-bottom: 2rem;
                    flex-wrap: wrap;
                }
            
                .error-actions .btn {
                    min-width: 140px;
                    justify-content: center;
                }
            
                .error-suggestions {
                    text-align: left;
                    border-top: 1px solid var(--color-gray-200);
                    padding-top: 2rem;
                }
            
                .error-suggestions h3 {
                    margin-bottom: 1rem;
                    color: var(--color-gray-900);
                    font-size: 1.25rem;
                }
            
                .error-suggestions ul {
                    list-style: none;
                    padding: 0;
                }
            
                .error-suggestions li {
                    padding: 0.5rem 0;
                    color: var(--color-gray-600);
                    position: relative;
                    padding-left: 1.5rem;
                }
            
                .error-suggestions li::before {
                    content: '‚Ä¢';
                    color: var(--color-primary-500);
                    font-weight: bold;
                    position: absolute;
                    left: 0;
                }
            
                .btn-outline {
                    background: transparent;
                    color: var(--color-primary-600);
                    border: 1px solid var(--color-primary-600);
                }
            
                .btn-outline:hover {
                    background: var(--color-primary-50);
                    color: var(--color-primary-700);
                    border-color: var(--color-primary-700);
                }
            
                @@media (max-width: 768px) {
                    .error-content {
                        padding: 2rem 1.5rem;
                        margin: 1rem;
                    }
                
                    .error-title {
                        font-size: 1.5rem;
                    }
                
                    .error-message {
                        font-size: 1rem;
                    }
                
                    .error-actions {
                        flex-direction: column;
                        align-items: center;
                    }
                
                    .error-actions .btn {
                        width: 100%;
                        max-width: 200px;
                    }
                }
            `;
        document.head.appendChild(style);
    </script>
}