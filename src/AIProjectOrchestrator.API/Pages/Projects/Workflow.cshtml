@page
@{
    ViewData["Title"] = "Project Workflow";
    var projectId = Request.Query["projectId"];
    var newProject = Request.Query["newProject"].ToString() == "true";
}

<div class="container">
    <div class="page-header">
        <div>
            <h1>Project Workflow</h1>
            <p class="subtitle">AI-powered development pipeline</p>
        </div>
        <div class="workflow-actions">
            <a href="/Projects" class="btn btn-secondary">‚Üê Back to Projects</a>
            <button class="btn btn-primary" onclick="exportProject()">
                <span>üì•</span> Export
            </button>
        </div>
    </div>

    <!-- Project Overview -->
    <div class="project-overview" id="project-overview">
        <div class="overview-card">
            <h3>Project Information</h3>
            <div class="overview-content">
                <div class="overview-item">
                    <span class="label">Name:</span>
                    <span class="value" id="project-name">Loading...</span>
                </div>
                <div class="overview-item">
                    <span class="label">Status:</span>
                    <span class="value status" id="project-status">Loading...</span>
                </div>
                <div class="overview-item">
                    <span class="label">Created:</span>
                    <span class="value" id="project-created">Loading...</span>
                </div>
                <div class="overview-item">
                    <span class="label">Progress:</span>
                    <span class="value" id="project-progress">0%</span>
                </div>
            </div>
        </div>
        <!-- Start Workflow Button for New Projects -->
        <div class="overview-item start-workflow-container" id="start-workflow-container" style="display: none;">
            <div class="start-workflow-btn">
                <button class="btn btn-primary" onclick="window.workflowManager.analyzeRequirements()">
                    üöÄ Start Workflow & Generate Requirements
                </button>
                <p class="small-text">Click to begin the AI-powered development process</p>
            </div>
        </div>
    </div>

    <!-- Custom Styles for Start Workflow Button -->
    <style>
        .start-workflow-container {
            margin-top: 2rem;
            padding: 1.5rem;
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            text-align: center;
        }

        .start-workflow-btn .btn {
            font-size: 1.1rem;
            padding: 0.75rem 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .start-workflow-btn .small-text {
            margin-top: 0.75rem;
            color: #6c757d;
            font-size: 0.9rem;
        }
    </style>

    <!-- Workflow Pipeline -->
    <div class="workflow-pipeline">
        <div class="pipeline-stage">
            <div class="stage-indicator" id="stage-1">
                <span>1</span>
            </div>
            <div class="stage-title">Requirements</div>
            <div class="stage-description">Define project requirements</div>
        </div>

        <div class="pipeline-stage">
            <div class="stage-indicator" id="stage-2">
                <span>2</span>
            </div>
            <div class="stage-title">Planning</div>
            <div class="stage-description">Technical architecture</div>
        </div>

        <div class="pipeline-stage">
            <div class="stage-indicator" id="stage-3">
                <span>3</span>
            </div>
            <div class="stage-title">Stories</div>
            <div class="stage-description">User stories & tasks</div>
        </div>

        <div class="pipeline-stage">
            <div class="stage-indicator" id="stage-4">
                <span>4</span>
            </div>
            <div class="stage-title">Prompts</div>
            <div class="stage-description">Code generation</div>
        </div>

        <div class="pipeline-stage">
            <div class="stage-indicator" id="stage-5">
                <span>5</span>
            </div>
            <div class="stage-title">Review</div>
            <div class="stage-description">Quality assurance</div>
        </div>
    </div>

    <!-- Stage Action Button for New Projects -->
    <div class="new-project-stage-action" id="new-project-stage-action"
        style="display: none; margin: 2rem 0; text-align: center;">
        <h3>Ready to start your project?</h3>
        <p>Click the button below to begin the AI-powered development workflow</p>
        <button class="btn btn-lg btn-primary" onclick="window.workflowManager.analyzeRequirements()">
            üöÄ Start Requirements Analysis
        </button>
    </div>

    <!-- Stage Content -->
    <div class="stage-content" id="stage-content">
        <!-- Dynamic content will be loaded here based on current stage -->
    </div>

    <!-- Stage Navigation -->
    <div class="stage-navigation">
        <button class="btn btn-secondary" id="prev-stage" onclick="navigateStage(-1)" disabled>
            ‚Üê Previous
        </button>
        <span class="stage-counter" id="stage-counter">Loading stage...</span>
        <button class="btn btn-primary" id="next-stage" onclick="navigateStage(1)" disabled>
            Next ‚Üí
        </button>
    </div>
</div>

@section Scripts {
    <script src="~/js/workflow.js"></script>
    <script>
        // Enhanced workflow initialization with new project support
        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const projectId = urlParams.get('projectId');
            const newProject = urlParams.get('newProject') === 'true';

            if (!projectId) {
                alert('Project ID is required');
                window.location.href = '/Projects';
                return;
            }

            // Initialize the workflow manager with new project flag
            if (window.workflowManager) {
                // Set the new project flag for the workflow manager
                window.workflowManager.isNewProject = newProject;

                // If this is a new project, automatically prompt for requirements analysis
                if (newProject) {
                    setTimeout(() => {
                        window.App.showNotification('Welcome to your new project! Let\'s start with requirements analysis.', 'info');
                        // The workflow manager will handle the rest
                    }, 1000);
                }
            }
        });

        // Global function to handle requirements analysis (called from workflow.js)
        async function analyzeRequirements() {
            if (window.workflowManager) {
                return window.workflowManager.analyzeRequirements();
            }

            // Fallback for compatibility
            showNotification('Please wait for the workflow to initialize...', 'info');
        }

        // Global function to handle project export (called from UI)
        function exportProject() {
            if (window.workflowManager) {
                return window.workflowManager.exportProject();
            }

            // Fallback
            showNotification('Export functionality coming soon', 'info');
        }
    </script>
}