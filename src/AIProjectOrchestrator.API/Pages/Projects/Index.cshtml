@page
@{
    ViewData["Title"] = "Projects";
}

<div class="container">
    <!-- Enhanced Header Section -->
    <div class="page-header enhanced">
        <div class="header-content">
            <div class="header-left">
                <h1>Projects</h1>
                <p class="subtitle">Manage your AI-powered development projects</p>
            </div>
            <div class="header-right">
                <a href="/Projects/Create" class="btn btn-primary">
                    <span>‚ûï</span> New Project
                </a>
            </div>
        </div>

        <!-- Unified Search and Filter Section -->
        <div class="search-filter-bar">
            <div class="search-section">
                <div class="search-box">
                    <input type="text" id="search-input" placeholder="Search projects..." class="form-input">
                    <span class="search-icon">üîç</span>
                </div>
            </div>
            <div class="filter-section">
                <select id="status-filter" class="form-select">
                    <option value="">All Status</option>
                    <option value="planning">Planning</option>
                    <option value="active">Active</option>
                    <option value="completed">Completed</option>
                    <option value="paused">Paused</option>
                </select>
                <select id="type-filter" class="form-select">
                    <option value="">All Types</option>
                    <option value="web">Web Application</option>
                    <option value="mobile">Mobile App</option>
                    <option value="api">API Service</option>
                    <option value="desktop">Desktop Application</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Projects Grid -->
    <div class="projects-grid" id="projects-container">
        <!-- Projects will be loaded here -->
    </div>

    <!-- Empty State -->
    <div class="empty-state" id="empty-state" style="display: none;">
        <div class="empty-content">
            <div class="empty-icon">üìÅ</div>
            <h3>No Projects Found</h3>
            <p>Create your first AI-powered project to get started</p>
            <a href="/Projects/Create" class="btn btn-primary">Create Project</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            loadProjects();

            // Setup event listeners
            document.getElementById('search-input').addEventListener('input', debounce(filterProjects, 300));
            document.getElementById('status-filter').addEventListener('change', filterProjects);
            document.getElementById('type-filter').addEventListener('change', filterProjects);
        });

        let allProjects = [];

        let loadingOverlay = null;

        async function loadProjects() {
            try {
                loadingOverlay = showLoading('Loading projects...');
                const projects = await APIClient.getProjects();
                allProjects = projects;
                renderProjects(projects);
                hideLoading(loadingOverlay);
                loadingOverlay = null;
            } catch (error) {
                if (loadingOverlay) {
                    hideLoading(loadingOverlay);
                    loadingOverlay = null;
                }
                App.showNotification('Failed to load projects: ' + error.message, 'error');
            }
        }

        function renderProjects(projects) {
            const container = document.getElementById('projects-container');
            const emptyState = document.getElementById('empty-state');

            if (projects.length === 0) {
                container.style.display = 'none';
                emptyState.style.display = 'block';
                return;
            }

            container.style.display = 'grid';
            emptyState.style.display = 'none';

            container.innerHTML = projects.map(project => `
                                    <div class="project-card enhanced" data-project='${JSON.stringify(project)}'>
                                        <div class="project-header">
                                            <div class="project-title-section">
                                                <h3>${project.name}</h3>
                                                <span class="project-status ${project.status}">${project.status}</span>
                                            </div>
                                            <div class="project-actions-header">
                                                <button class="btn btn-sm btn-secondary" onclick="toggleDescription('${project.id}')" title="Toggle Description">
                                                    <span class="toggle-icon" id="toggle-${project.id}">‚ñº</span>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="project-description-container" id="desc-${project.id}">
                                            <p class="project-description">${project.description || 'No description provided'}</p>
                                        </div>
                                        <div class="project-meta">
                                            <span class="project-type">${project.type || 'web'}</span>
                                            <span class="project-date">Created: ${new Date(project.createdAt).toLocaleDateString()}</span>
                                        </div>
                                        <div class="project-actions">
                                            <a href="/Projects/Workflow?projectId=${project.id}" class="btn btn-primary">
                                                View Workflow
                                            </a>
                                            <button class="btn btn-secondary" onclick="editProject('${project.id}')">
                                                Edit
                                            </button>
                                            <button class="btn btn-outline-danger" onclick="deleteProject('${project.id}')">
                                                Delete
                                            </button>
                                        </div>
                                    </div>
                                `).join('');

            // Initialize collapsible descriptions
            projects.forEach(project => {
                if (project.description && project.description.length > 150) {
                    collapseDescription(project.id);
                }
            });
        }

        function toggleDescription(projectId) {
            const descContainer = document.getElementById(`desc-${projectId}`);
            const toggleIcon = document.getElementById(`toggle-${projectId}`);

            if (descContainer.classList.contains('collapsed')) {
                expandDescription(projectId);
            } else {
                collapseDescription(projectId);
            }
        }

        function collapseDescription(projectId) {
            const descContainer = document.getElementById(`desc-${projectId}`);
            const toggleIcon = document.getElementById(`toggle-${projectId}`);

            descContainer.classList.add('collapsed');
            toggleIcon.textContent = '‚ñ∂';
        }

        function expandDescription(projectId) {
            const descContainer = document.getElementById(`desc-${projectId}`);
            const toggleIcon = document.getElementById(`toggle-${projectId}`);

            descContainer.classList.remove('collapsed');
            toggleIcon.textContent = '‚ñº';
        }

        function filterProjects() {
            const searchTerm = document.getElementById('search-input').value.toLowerCase();
            const statusFilter = document.getElementById('status-filter').value;
            const typeFilter = document.getElementById('type-filter').value;

            const filtered = allProjects.filter(project => {
                const matchesSearch = !searchTerm ||
                    project.name.toLowerCase().includes(searchTerm) ||
                    (project.description && project.description.toLowerCase().includes(searchTerm));

                const matchesStatus = !statusFilter || project.status === statusFilter;
                const matchesType = !typeFilter || project.type === typeFilter;

                return matchesSearch && matchesStatus && matchesType;
            });

            renderProjects(filtered);
        }

        async function editProject(projectId) {
            // Placeholder for edit functionality
            console.log('Edit project:', projectId);
            App.showNotification('Edit functionality coming soon', 'info');
        }

        async function deleteProject(projectId) {
            if (confirm('Are you sure you want to delete this project? This action cannot be undone.')) {
                let deleteOverlay = null;
                try {
                    deleteOverlay = showLoading('Deleting project...');
                    await APIClient.deleteProject(projectId);
                    App.showNotification('Project deleted successfully', 'success');
                    hideLoading(deleteOverlay);
                    loadProjects();
                } catch (error) {
                    if (deleteOverlay) {
                        hideLoading(deleteOverlay);
                    }
                    App.showNotification('Failed to delete project: ' + error.message, 'error');
                }
            }
        }

        // Enhanced CSS for the improved layout
        const style = document.createElement('style');
        style.textContent = `
                                .page-header.enhanced {
                                    margin-bottom: 2rem;
                                    background: white;
                                    border-radius: 12px;
                                    padding: 2rem;
                                    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
                                    border: 1px solid var(--color-gray-200);
                                }
            
                                .header-content {
                                    display: flex;
                                    justify-content: space-between;
                                    align-items: flex-start;
                                    margin-bottom: 1.5rem;
                                }
            
                                .header-left h1 {
                                    margin: 0 0 0.5rem 0;
                                    font-size: 2rem;
                                    color: var(--color-gray-900);
                                }
            
                                .header-left .subtitle {
                                    margin: 0;
                                    color: var(--color-gray-600);
                                    font-size: 1.1rem;
                                }
            
                                .search-filter-bar {
                                    display: flex;
                                    gap: 1rem;
                                    align-items: center;
                                    flex-wrap: wrap;
                                }
            
                                .search-section {
                                    flex: 1;
                                    min-width: 300px;
                                }
            
                                .filter-section {
                                    display: flex;
                                    gap: 1rem;
                                }
            
                                .search-box {
                                    position: relative;
                                    width: 100%;
                                }
            
                                .search-box .form-input {
                                    padding-left: 2.5rem;
                                    width: 100%;
                                }
            
                                .search-icon {
                                    position: absolute;
                                    left: 0.75rem;
                                    top: 50%;
                                    transform: translateY(-50%);
                                    color: var(--color-gray-400);
                                    font-size: 1rem;
                                }
            
                                .project-card.enhanced {
                                    background: white;
                                    border-radius: 12px;
                                    padding: 1.5rem;
                                    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
                                    border: 1px solid var(--color-gray-200);
                                    transition: all 0.3s ease;
                                    position: relative;
                                }
            
                                .project-card.enhanced:hover {
                                    transform: translateY(-2px);
                                    box-shadow: 0 10px 25px -5px rgb(0 0 0 / 0.1);
                                }
            
                                .project-header {
                                    display: flex;
                                    justify-content: space-between;
                                    align-items: flex-start;
                                    margin-bottom: 1rem;
                                }
            
                                .project-title-section {
                                    flex: 1;
                                    margin-right: 1rem;
                                }
            
                                .project-title-section h3 {
                                    margin: 0 0 0.5rem 0;
                                    font-size: 1.25rem;
                                    color: var(--color-gray-900);
                                    line-height: 1.3;
                                }
            
                                .project-actions-header {
                                    display: flex;
                                    align-items: center;
                                    gap: 0.5rem;
                                }
            
                                .project-actions-header .btn-sm {
                                    padding: 0.375rem 0.75rem;
                                    font-size: 0.875rem;
                                    min-width: auto;
                                }
            
                                .project-description-container {
                                    margin-bottom: 1rem;
                                    transition: all 0.3s ease;
                                    overflow: hidden;
                                }
            
                                .project-description-container.collapsed {
                                    max-height: 60px;
                                    position: relative;
                                }
            
                                .project-description-container.collapsed::after {
                                    content: '';
                                    position: absolute;
                                    bottom: 0;
                                    left: 0;
                                    right: 0;
                                    height: 20px;
                                    background: linear-gradient(transparent, white);
                                }
            
                                .project-description {
                                    color: var(--color-gray-600);
                                    line-height: 1.5;
                                    margin: 0;
                                }
            
                                .project-meta {
                                    display: flex;
                                    gap: 1rem;
                                    margin-bottom: 1.5rem;
                                    font-size: 0.875rem;
                                    color: var(--color-gray-500);
                                    align-items: center;
                                }
            
                                .project-type {
                                    background: var(--color-primary-100);
                                    color: var(--color-primary-700);
                                    padding: 0.25rem 0.5rem;
                                    border-radius: 4px;
                                    font-weight: 500;
                                    text-transform: uppercase;
                                    font-size: 0.75rem;
                                }
            
                                .project-actions {
                                    display: flex;
                                    gap: 0.5rem;
                                    flex-wrap: wrap;
                                }
            
                                .project-actions .btn {
                                    flex: 1;
                                    min-width: 100px;
                                    justify-content: center;
                                }
            
                                .toggle-icon {
                                    transition: transform 0.2s ease;
                                    font-size: 0.75rem;
                                }
            
                                .btn-outline-danger {
                                    background: transparent;
                                    color: var(--color-danger-500);
                                    border: 1px solid var(--color-danger-500);
                                }
            
                                .btn-outline-danger:hover {
                                    background: var(--color-danger-50);
                                    color: var(--color-danger-600);
                                    border-color: var(--color-danger-600);
                                }
            
                                .empty-state {
                                    text-align: center;
                                    padding: 4rem 2rem;
                                }
            
                                .empty-content {
                                    max-width: 400px;
                                    margin: 0 auto;
                                }
            
                                .empty-icon {
                                    font-size: 4rem;
                                    margin-bottom: 1rem;
                                }
            
                                .empty-state h3 {
                                    margin-bottom: 0.5rem;
                                    color: var(--color-gray-900);
                                }
            
                                .empty-state p {
                                    color: var(--color-gray-600);
                                    margin-bottom: 1.5rem;
                                }
            
                                @@media (max-width: 768px) {
                                    .header-content {
                                        flex-direction: column;
                                        gap: 1rem;
                                        text-align: center;
                                    }
                
                                    .search-filter-bar {
                                        flex-direction: column;
                                        gap: 1rem;
                                    }
                
                                    .search-section {
                                        width: 100%;
                                    }
                
                                    .filter-section {
                                        width: 100%;
                                        justify-content: space-between;
                                    }
                
                                    .project-header {
                                        flex-direction: column;
                                        gap: 1rem;
                                    }
                
                                    .project-title-section {
                                        margin-right: 0;
                                    }
                
                                    .project-actions-header {
                                        align-self: flex-end;
                                    }
                
                                    .project-actions {
                                        flex-direction: column;
                                    }
                
                                    .project-actions .btn {
                                        width: 100%;
                                    }
                
                                    .projects-grid {
                                        grid-template-columns: 1fr;
                                    }
                                }
            
                                @@media (max-width: 480px) {
                                    .page-header.enhanced {
                                        padding: 1.5rem;
                                    }
                
                                    .filter-section {
                                        flex-direction: column;
                                        gap: 0.5rem;
                                    }
                
                                    .filter-section .form-select {
                                        width: 100%;
                                    }
                                }
                            `;
        document.head.appendChild(style);

        // Debounce function for search input
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
    </script>
}