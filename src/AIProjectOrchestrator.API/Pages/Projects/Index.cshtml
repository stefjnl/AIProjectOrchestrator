@page
@{
    ViewData["Title"] = "Projects";
}

<div class="container">
    <div class="page-header">
        <div class="header-content">
            <div>
                <h1>Projects</h1>
                <p class="subtitle">Manage your AI-powered development projects</p>
            </div>
            <a href="/Projects/Create" class="btn btn-primary">
                <span>‚ûï</span> New Project
            </a>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="filters-section">
        <div class="search-filters">
            <div class="search-box">
                <input type="text" id="search-input" placeholder="Search projects..." class="form-input">
                <span class="search-icon">üîç</span>
            </div>
            <div class="filter-controls">
                <select id="status-filter" class="form-select">
                    <option value="">All Status</option>
                    <option value="planning">Planning</option>
                    <option value="active">Active</option>
                    <option value="completed">Completed</option>
                    <option value="paused">Paused</option>
                </select>
                <select id="type-filter" class="form-select">
                    <option value="">All Types</option>
                    <option value="web">Web Application</option>
                    <option value="mobile">Mobile App</option>
                    <option value="api">API Service</option>
                    <option value="desktop">Desktop Application</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Projects Grid -->
    <div class="projects-grid" id="projects-container">
        <!-- Projects will be loaded here -->
    </div>

    <!-- Empty State -->
    <div class="empty-state" id="empty-state" style="display: none;">
        <div class="empty-content">
            <div class="empty-icon">üìÅ</div>
            <h3>No Projects Found</h3>
            <p>Create your first AI-powered project to get started</p>
            <a href="/Projects/Create" class="btn btn-primary">Create Project</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            loadProjects();

            // Setup event listeners
            document.getElementById('search-input').addEventListener('input', filterProjects);
            document.getElementById('status-filter').addEventListener('change', filterProjects);
            document.getElementById('type-filter').addEventListener('change', filterProjects);
        });

        let allProjects = [];

        async function loadProjects() {
            try {
                const projects = await APIClient.getProjects();
                allProjects = projects;
                renderProjects(projects);
            } catch (error) {
                handleApiError(error, 'Failed to load projects');
            }
        }

        function renderProjects(projects) {
            const container = document.getElementById('projects-container');
            const emptyState = document.getElementById('empty-state');

            if (projects.length === 0) {
                container.style.display = 'none';
                emptyState.style.display = 'block';
                return;
            }

            container.style.display = 'grid';
            emptyState.style.display = 'none';

            container.innerHTML = projects.map(project => `
                    <div class="project-card" data-project='${JSON.stringify(project)}'>
                        <div class="project-header">
                            <h3>${project.name}</h3>
                            <span class="project-status ${project.status}">${project.status}</span>
                        </div>
                        <p class="project-description">${project.description || 'No description provided'}</p>
                        <div class="project-meta">
                            <span class="project-type">${project.type || 'web'}</span>
                            <span class="project-date">Created: ${new Date(project.createdAt).toLocaleDateString()}</span>
                        </div>
                        <div class="project-actions">
                            <a href="/Projects/Workflow?projectId=${project.id}" class="btn btn-primary">
                                View Workflow
                            </a>
                            <button class="btn btn-secondary" onclick="editProject('${project.id}')">
                                Edit
                            </button>
                        </div>
                    </div>
                `).join('');
        }

        function filterProjects() {
            const searchTerm = document.getElementById('search-input').value.toLowerCase();
            const statusFilter = document.getElementById('status-filter').value;
            const typeFilter = document.getElementById('type-filter').value;

            const filtered = allProjects.filter(project => {
                const matchesSearch = !searchTerm ||
                    project.name.toLowerCase().includes(searchTerm) ||
                    (project.description && project.description.toLowerCase().includes(searchTerm));

                const matchesStatus = !statusFilter || project.status === statusFilter;
                const matchesType = !typeFilter || project.type === typeFilter;

                return matchesSearch && matchesStatus && matchesType;
            });

            renderProjects(filtered);
        }

        function editProject(projectId) {
            // Placeholder for edit functionality
            console.log('Edit project:', projectId);
        }

        // Add CSS for filters and search
        const style = document.createElement('style');
        style.textContent = `
                .page-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: flex-start;
                    margin-bottom: 2rem;
                }
            
                .header-content h1 {
                    margin: 0;
                    font-size: 2rem;
                }
            
                .header-content .subtitle {
                    margin: 0.5rem 0 0 0;
                    color: var(--color-gray-600);
                }
            
                .filters-section {
                    background: white;
                    padding: 1.5rem;
                    border-radius: 12px;
                    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
                    margin-bottom: 2rem;
                }
            
                .search-filters {
                    display: flex;
                    gap: 1rem;
                    align-items: center;
                    flex-wrap: wrap;
                }
            
                .search-box {
                    position: relative;
                    flex: 1;
                    min-width: 250px;
                }
            
                .search-box .form-input {
                    padding-left: 2.5rem;
                }
            
                .search-icon {
                    position: absolute;
                    left: 0.75rem;
                    top: 50%;
                    transform: translateY(-50%);
                    color: var(--color-gray-400);
                }
            
                .filter-controls {
                    display: flex;
                    gap: 1rem;
                }
            
                .projects-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
                    gap: 1.5rem;
                }
            
                .project-card {
                    background: white;
                    border-radius: 12px;
                    padding: 1.5rem;
                    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
                    border: 1px solid var(--color-gray-200);
                    transition: all 0.3s ease;
                }
            
                .project-card:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 10px 25px -5px rgb(0 0 0 / 0.1);
                }
            
                .project-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: flex-start;
                    margin-bottom: 1rem;
                }
            
                .project-header h3 {
                    margin: 0;
                    font-size: 1.25rem;
                    color: var(--color-gray-900);
                }
            
                .project-status {
                    padding: 0.25rem 0.75rem;
                    border-radius: 20px;
                    font-size: 0.75rem;
                    font-weight: 500;
                    text-transform: uppercase;
                }
            
                .project-status.planning {
                    background: var(--color-warning-100);
                    color: var(--color-warning-700);
                }
            
                .project-status.active {
                    background: var(--color-success-100);
                    color: var(--color-success-700);
                }
            
                .project-status.completed {
                    background: var(--color-gray-100);
                    color: var(--color-gray-600);
                }
            
                .project-status.paused {
                    background: var(--color-gray-100);
                    color: var(--color-gray-600);
                }
            
                .project-description {
                    color: var(--color-gray-600);
                    margin-bottom: 1rem;
                    line-height: 1.5;
                }
            
                .project-meta {
                    display: flex;
                    gap: 1rem;
                    margin-bottom: 1.5rem;
                    font-size: 0.875rem;
                    color: var(--color-gray-500);
                }
            
                .project-actions {
                    display: flex;
                    gap: 0.5rem;
                }
            
                .project-actions .btn {
                    flex: 1;
                    justify-content: center;
                }
            
                .empty-state {
                    text-align: center;
                    padding: 4rem 2rem;
                }
            
                .empty-content {
                    max-width: 400px;
                    margin: 0 auto;
                }
            
                .empty-icon {
                    font-size: 4rem;
                    margin-bottom: 1rem;
                }
            
                .empty-state h3 {
                    margin-bottom: 0.5rem;
                    color: var(--color-gray-900);
                }
            
                .empty-state p {
                    color: var(--color-gray-600);
                    margin-bottom: 1.5rem;
                }
            
                @@media (max-width: 768px) {
                    .page-header {
                        flex-direction: column;
                        gap: 1rem;
                    }
                
                    .search-filters {
                        flex-direction: column;
                    }
                
                    .search-box {
                        width: 100%;
                    }
                
                    .filter-controls {
                        width: 100%;
                    }
                
                    .filter-controls .form-select {
                        flex: 1;
                    }
                
                    .projects-grid {
                        grid-template-columns: 1fr;
                    }
                }
            `;
        document.head.appendChild(style);
    </script>
}